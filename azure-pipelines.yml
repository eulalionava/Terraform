# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
- group: Terraform

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'
  displayName: 'Terraform installer'

- task: TerraformCLI@1
  inputs:
    command: 'init'
    backendType: 'azurerm'
    backendServiceArm: 'TESTLABS'
    backendAzureRmSubscriptionId: 'e9cdf5ea-1d5c-48c0-b179-7dc7a4973f06'
    backendAzureRmResourceGroupName: 'RG-TESTLABS-RM'
    backendAzureRmStorageAccountName: 'storageterraform3'
    backendAzureRmContainerName: 'terraformcontainer'
    backendAzureRmKey: $(STORAGE_ACCOUNT_KEY)
    allowTelemetryCollection: true
  displayName: 'Terraform init'

- task: TerraformCLI@1
  inputs:
    command: 'validate'
    allowTelemetryCollection: true

- task: TerraformCLI@1
  inputs:
    command: 'apply'
    environmentServiceName: 'TESTLABS'
    allowTelemetryCollection: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
  displayName: 'Publish Artifact'