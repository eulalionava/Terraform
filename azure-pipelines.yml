# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
- group: Terraform

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'
  displayName: 'Terraform installer'

#- task: AzurePowerShell@5
#  inputs:
#    azureSubscription: 'TESTLABS'
#    ScriptType: 'InlineScript'
#    Inline: |
#      $ACCOUNT_KEY=(Get-AzStorageAccountKey -ResourceGroupName $(RESOURCE_GROUP_NAME) -Name $(STORAGE_ACCOUNT_NAME))[0].Value
#      $env:ARM_ACCESS_KEY=$ACCOUNT_KEY
#    azurePowerShellVersion: 'LatestVersion'
#    pwsh: true

- task: TerraformCLI@1
  inputs:
    command: 'init'
    backendType: 'azurerm'
    backendServiceArm: 'TESTLABS'
    backendAzureRmSubscriptionId: 'e9cdf5ea-1d5c-48c0-b179-7dc7a4973f06'
    backendAzureRmResourceGroupName: 'RG-TESTLABS-RM'
    backendAzureRmStorageAccountName: 'storageterraform3'
    backendAzureRmContainerName: 'terraformcontainer'
    backendAzureRmKey: $(STORAGE_ACCOUNT_KEY)
    allowTelemetryCollection: true

- task: TerraformCLI@1
  inputs:
    command: 'validate'
    allowTelemetryCollection: true
  displayName: 'Terraform validate'

- task: TerraformCLI@1
  inputs:
    command: 'plan'
    allowTelemetryCollection: true
  displayName: 'Teraform plan'
