# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

variables:
- group: Terraform

jobs:
- job: 'Plan'
  steps:
  - script: echo Hello, world!
    displayName: 'Run a one-line script'

  - task: TerraformInstaller@1
    inputs:
      terraformVersion: 'latest'
    displayName: 'Terraform installer'
  - task: TerraformCLI@1
    inputs:
      command: 'init'
      backendType: 'azurerm'
      backendServiceArm: 'TESTLABS'
      backendAzureRmResourceGroupName: 'RG-TESTLABS-RM'
      backendAzureRmStorageAccountName: 'storageterraform3'
      backendAzureRmContainerName: 'multistagecontainer'
      backendAzureRmKey: $(STORAGE_ACCOUNT_KEY)
      allowTelemetryCollection: true
    displayName: 'Terraform init'
  - task: TerraformCLI@1
    inputs:
      command: 'validate'
      allowTelemetryCollection: true
    displayName: "Terraform validate"

  - task: TerraformCLI@1
    inputs:
      command: 'plan'
      environmentServiceName: 'TESTLABS'
      allowTelemetryCollection: true
      commandOptions: '-lock=false'
      publishPlanResults: 'plan_results.json'
    displayName: "Terraform plan"

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: '**'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    displayName: 'Publish Artifact'

- job: 'DeployJob'
  displayName: 'Deploy'
  dependsOn: 'Plan'
  #condition: false
  steps:
  - task: TerraformCLI@1
    inputs:
      command: 'init'
      backendType: 'azurerm'
      backendServiceArm: 'TESTLABS'
      backendAzureRmResourceGroupName: 'RG-TESTLABS-RM'
      backendAzureRmStorageAccountName: 'storageterraform3'
      backendAzureRmContainerName: 'multistagecontainer'
      backendAzureRmKey: $(STORAGE_ACCOUNT_KEY)
      allowTelemetryCollection: true
    displayName: 'Terraform init'
  - task: TerraformCLI@1
    inputs:
      command: 'plan'
      environmentServiceName: 'TESTLABS'
      allowTelemetryCollection: true
      commandOptions: '-lock=false'
      publishPlanResults: 'plan_results.json'
    displayName: "Terraform plan"
  - task: TerraformCLI@1
    inputs:
      command: 'apply'
      environmentServiceName: 'TESTLABS'
      allowTelemetryCollection: true
    displayName: "Terraform Apply"
